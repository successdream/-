{"remainingRequest":"D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workSpace\\upload\\picture-detection-window\\src\\views\\pictureDetection\\Main.vue?vue&type=template&id=3da00197&scoped=true&","dependencies":[{"path":"D:\\work\\workSpace\\upload\\picture-detection-window\\src\\views\\pictureDetection\\Main.vue","mtime":1563759171849},{"path":"D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"pic\" }, [\n    _c(\"div\", { staticStyle: { background: \"white\" } }, [\n      _c(\n        \"div\",\n        {\n          staticStyle: {\n            \"border-left\": \"10px solid #67C23A\",\n            padding: \"10px\",\n            margin: \"10px\",\n            \"font-size\": \"14px\",\n            \"border-bottom\": \"1px solid #ccc\"\n          }\n        },\n        [\n          _vm._v(\"\\n      图片检测 \\n      \"),\n          _c(\"el-button\", {\n            attrs: { type: \"text\", icon: \"el-icon-refresh\" },\n            on: { click: _vm.clearAll }\n          })\n        ],\n        1\n      )\n    ]),\n    _c(\"div\", { staticStyle: { flex: \"1\", display: \"flex\" } }, [\n      _c(\n        \"div\",\n        {\n          staticStyle: {\n            flex: \"1\",\n            display: \"flex\",\n            \"flex-direction\": \"column\"\n          }\n        },\n        [\n          _c(\n            \"div\",\n            {\n              staticClass: \"options\",\n              staticStyle: {\n                display: \"flex\",\n                \"align-items\": \"center\",\n                height: \"66px\",\n                width: \"1200px\"\n              }\n            },\n            [\n              _c(\n                \"el-select\",\n                {\n                  attrs: { placeholder: \"请选择检测类型\" },\n                  on: { change: _vm.selectChange },\n                  model: {\n                    value: _vm.uploadData.type,\n                    callback: function($$v) {\n                      _vm.$set(_vm.uploadData, \"type\", $$v)\n                    },\n                    expression: \"uploadData.type\"\n                  }\n                },\n                _vm._l(\n                  [\n                    { value: \"attitude\", label: \"姿态异常\" },\n                    { value: \"intrusion\", label: \"区域入侵\" }\n                  ],\n                  function(item) {\n                    return _c(\"el-option\", {\n                      key: item.value,\n                      attrs: { label: item.label, value: item.value }\n                    })\n                  }\n                ),\n                1\n              ),\n              _c(\"div\", { staticStyle: { flex: \"1\", display: \"flex\" } }, [\n                !_vm.intrusionStyle\n                  ? _c(\n                      \"div\",\n                      {\n                        staticStyle: {\n                          display: \"flex\",\n                          \"line-height\": \"28px\",\n                          \"align-items\": \"center\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"h4\",\n                          { staticStyle: { width: \"80px\", padding: \"0\" } },\n                          [_vm._v(\"置信度:\")]\n                        ),\n                        _c(\"el-slider\", {\n                          staticStyle: { width: \"215px\" },\n                          attrs: { step: 0.01, max: 1 },\n                          model: {\n                            value: _vm.uploadData.confidence,\n                            callback: function($$v) {\n                              _vm.$set(_vm.uploadData, \"confidence\", $$v)\n                            },\n                            expression: \"uploadData.confidence\"\n                          }\n                        }),\n                        _c(\n                          \"el-tag\",\n                          {\n                            staticStyle: {\n                              width: \"35px\",\n                              \"text-align\": \"center\"\n                            }\n                          },\n                          [_vm._v(_vm._s(_vm.uploadData.confidence))]\n                        )\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n                !_vm.intrusionStyle\n                  ? _c(\n                      \"div\",\n                      {\n                        staticStyle: {\n                          display: \"flex\",\n                          \"line-height\": \"28px\",\n                          flex: \"1\",\n                          \"align-items\": \"center\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"h4\",\n                          { staticStyle: { width: \"80px\", padding: \"0\" } },\n                          [_vm._v(\"nms:\")]\n                        ),\n                        _c(\"el-slider\", {\n                          staticStyle: { width: \"215px\" },\n                          attrs: { step: 0.01, max: 1 },\n                          model: {\n                            value: _vm.uploadData.nms,\n                            callback: function($$v) {\n                              _vm.$set(_vm.uploadData, \"nms\", $$v)\n                            },\n                            expression: \"uploadData.nms\"\n                          }\n                        }),\n                        _c(\n                          \"el-tag\",\n                          {\n                            staticStyle: {\n                              width: \"35px\",\n                              \"text-align\": \"center\"\n                            }\n                          },\n                          [_vm._v(_vm._s(_vm.uploadData.nms))]\n                        )\n                      ],\n                      1\n                    )\n                  : _vm._e()\n              ]),\n              _c(\n                \"div\",\n                { staticClass: \"buttons\" },\n                [\n                  _c(\n                    \"el-upload\",\n                    {\n                      ref: \"upload\",\n                      attrs: {\n                        action: \"/api/postImg\",\n                        data: _vm.uploadData,\n                        \"on-change\": _vm.uploadChange,\n                        \"on-success\": _vm.uploadSuccess,\n                        \"show-file-list\": false,\n                        \"file-list\": _vm.fileList,\n                        \"auto-upload\": false,\n                        \"on-error\": _vm.uploadError\n                      },\n                      nativeOn: {\n                        change: function($event) {\n                          return _vm.nativeUploadChange($event)\n                        }\n                      }\n                    },\n                    [\n                      _c(\n                        \"el-button\",\n                        {\n                          attrs: {\n                            slot: \"trigger\",\n                            size: \"small\",\n                            type: \"primary\"\n                          },\n                          slot: \"trigger\"\n                        },\n                        [_vm._v(\"选取文件\")]\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          staticStyle: { \"margin-left\": \"10px\" },\n                          attrs: {\n                            loading: _vm.uploadLoding,\n                            size: \"small\",\n                            type: _vm.uploadBtn\n                          },\n                          on: { click: _vm.submitUpload }\n                        },\n                        [_vm._v(\"上传并检测\")]\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: !_vm.intrusionStyle,\n                              expression: \"!intrusionStyle\"\n                            }\n                          ],\n                          staticStyle: { \"margin-left\": \"10px\" },\n                          attrs: { size: \"small\", type: \"danger\" },\n                          on: { click: _vm.clearData }\n                        },\n                        [_vm._v(\"清空\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: !_vm.intrusionStyle,\n                  expression: \"!intrusionStyle\"\n                }\n              ],\n              staticStyle: {\n                flex: \"1\",\n                display: \"flex\",\n                width: \"1200px\",\n                \"background-color\": \"#eee\"\n              }\n            },\n            [\n              _c(\"egp-svg\", {\n                ref: \"egpSvg\",\n                staticStyle: { flex: \"1\", \"border-sizing\": \"border-box\" },\n                attrs: { imgSrc: _vm.imgSrc, options: _vm.svgOptions }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.intrusionStyle,\n                  expression: \"intrusionStyle\"\n                }\n              ],\n              staticStyle: {\n                flex: \"1\",\n                display: \"flex\",\n                width: \"1200px\",\n                \"background-color\": \"#eee\"\n              }\n            },\n            [\n              _c(\"img\", {\n                staticStyle: {\n                  flex: \"1\",\n                  \"border-sizing\": \"border-box\",\n                  border: \"1px solid #c0c0c0\",\n                  width: \"100%\",\n                  height: \"100%\"\n                },\n                attrs: { src: _vm.imgSrc, alt: \"\" }\n              })\n            ]\n          )\n        ]\n      ),\n      _c(\n        \"div\",\n        {\n          staticStyle: {\n            \"min-width\": \"500px\",\n            \"margin-top\": \"48px\",\n            \"margin-left\": \"50px\"\n          }\n        },\n        [\n          _c(\n            \"div\",\n            {\n              staticStyle: {\n                width: \"100%\",\n                height: \"300px\",\n                \"margin-top\": \"25px\"\n              }\n            },\n            [\n              _c(\"img\", {\n                staticStyle: { width: \"100%\", height: \"100%\" },\n                attrs: { src: _vm.resultImg, alt: \"\" },\n                on: { click: _vm.showResult }\n              })\n            ]\n          ),\n          _c(\"record-detail\", {\n            ref: \"recordDetail\",\n            attrs: { detectionResult: _vm.detectionResult }\n          })\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}