{"remainingRequest":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\src\\views\\pictureDetection\\Main.vue?vue&type=style&index=1&id=3da00197&lang=scss&scoped=true&","dependencies":[{"path":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\src\\views\\pictureDetection\\Main.vue","mtime":1563349984991},{"path":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.pic{\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  background: white;\n}\nh4{\n  text-align: right;\n}\n\n",{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Main.vue","sourceRoot":"src/views/pictureDetection","sourcesContent":["<template>\n  <div class=\"pic\">\n    <div style=\"background:white;\">\n      <div style=\"border-left: 10px solid #67C23A;padding:10px;margin:10px;font-size:14px;border-bottom:1px solid #ccc;\">\n        图片检测&nbsp;\n        <!-- <el-button type=\"text\" icon=\"el-icon-refresh\" style=\"padding:0;font-size:14px;\" title=\"刷新\"></el-button> -->\n      </div>\n    </div>\n    <div style=\"flex:1;display:flex;\">\n      <div style=\"flex:1;display:flex;flex-direction:column;\">\n        <div class=\"options\" style=\"padding: 0 10px;display:flex;\">\n          <el-select v-model=\"uploadData.type\" placeholder=\"请选择检测类型\" @change=\"selectChange\">\n            <el-option :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"\n              v-for=\"item in [{value: 'attitude', label: '姿态异常'},{value: 'intrusion', label: '区域入侵'},]\">\n            </el-option>\n          </el-select>\n          <div style=\"flex:1;display:flex;\">\n            <div style=\"display:flex;line-height:28px;\">\n              <h4 style=\"width:80px;margin: 0 15px 0 0; padding:0;\">置信度:</h4>\n              <el-slider v-model=\"uploadData.confidence\" style=\"width:215px;\" :step=\"0.01\" :max=\"1\"></el-slider>\n              <el-tag style=\"width:35px;text-align:center;margin: 10px 0 0 2px;\">{{uploadData.confidence}}</el-tag>\n            </div>\n            <div style=\"display:flex;line-height:28px;flex:1;\">\n              <h4 style=\"width:80px;margin: 0 15px 0 0; padding:0;\">nms:</h4>\n              <el-slider v-model=\"uploadData.nms\" style=\"width:215px;\" :step=\"0.01\" :max=\"1\"></el-slider>\n              <el-tag style=\"width:35px;text-align:center;margin: 10px 0 0 2px;\">{{uploadData.nms}}</el-tag>\n            </div>\n          </div>\n          <div class=\"buttons\">\n            <el-upload ref=\"upload\" action=\"/api/postImg\" :data=\"uploadData\" :on-change=\"uploadChange\" :on-success=\"uploadSuccess\"\n              :show-file-list=\"false\" :file-list=\"fileList\" :auto-upload=\"false\" :on-error=\"uploadError\">\n              <el-button slot=\"trigger\" size=\"small\" type=\"primary\">选取文件</el-button>\n              <el-button :loading=\"uploadLoding\" style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"submitUpload\">上传并检测</el-button>\n            </el-upload>\n          </div>\n        </div>\n        <div style=\"flex:1;display:flex;padding:10px;\">\n          <egp-svg ref=\"egpSvg\" style=\"flex:1;border-sizing: border-box;\" \n            :imgSrc=\"imgSrc\" :options=\"svgOptions\">\n          </egp-svg>\n        </div>\n      </div>\n      <div style=\"width:500px;\">\n        <!-- <div style=\"font-weight: bold;\">检测结果</div>\n        <div v-for=\"(value, key, index) in detectionResult\" :key=\"index\">\n          <div style=\"padding:5px;\">\n            <span>{{key}}：</span>\n            <span>{{value}}</span>\n          </div>\n        </div> -->\n        <el-card class=\"box-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>检测结果</span>\n          </div>\n          <div  v-for=\"(value, key, index) in detectionResult\" :key=\"index\">\n            {{'列表内容 ' + key }}\n          </div>\n        </el-card>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Watch } from 'vue-property-decorator';\nimport moment from 'moment';\nimport { EgpSvg } from 'egp-web-components';\nimport Card from '@/components/card/Main.vue';\nimport API from '@/api';\nimport { Params, Rule, originRule, Record } from '../../api/intrusion';\nimport { ElUpload } from 'element-ui/types/upload';\nimport axios from 'axios';\nimport uuid from 'uuid/v4';\n\ninterface Point {\n  x: number;\n  y:number;\n}\n\n\n// http://192.168.3.109:7001/postImg\n@Component({\n  components: {\n    EgpSvg,\n  }\n})\nexport default class IntrusionDetection extends Vue {\n  $refs!: {\n    upload: ElUpload;\n    egpSvg: any;\n  }\n  private svgOptions: any = {};\n  private fileList = [];\n  private imgSrc = '';\n  private uploadLoding = false;\n  // private detectionResult = {}\n  private detectionResult = {\n    \"confidence_thres\": 0.8,\n    \"nms_thres\": 0.4,\n    \"ts\": 1563348197739,\n    \"objects\": [\n        {\n            \"location\": {\n                \"xmin\": 210.46630202556508,\n                \"ymin\": 63.020422193569026,\n                \"xmax\": 313.14453510948647,\n                \"ymax\": 303.89819668096635\n            },\n            \"rule_id\": \"1562034599497\"\n        }\n    ],\n    \"img_base64\": \"\",\n\t  \"type\":'attitude'\n  } \n\n  private uploadData: {\n    confidence: number,\n    nms: number,\n    type: string,\n    region: string,\n    // imgId: string,\n  } = {\n    confidence: 0.8,\n    nms: 0.4,\n    type: 'attitude',\n    region: '',\n    // imgId: '',\n  };\n  \n  private async submitUpload() {\n    // this.uploadData.imgId = uuid();\n    if(this.uploadLoding) return;\n    this.uploadLoding = true;\n    const rules = this.$refs.egpSvg.getData();\n    this.uploadData.region = JSON.stringify(this.originToCommon(rules));\n    this.$refs.upload.submit();\n  }\n  \n  private originToCommon(rules: originRule[]): Rule[] {\n    return rules.map(item => ({ location: item.data, rule_id: item.id }));\n  }\n  \n  private uploadChange(file: any) {\n    const imgSrc = window.URL.createObjectURL(file.raw);\n    this.imgSrc = imgSrc;\n  }\n  \n  private uploadSuccess(res: any) {\n    this.uploadLoding = false;\n    // this.detectionResult = res;\n    this.detectionResult = {\n    \"confidence_thres\": 0.8,\n    \"nms_thres\": 0.4,\n    \"ts\": 1563348197739,\n    \"objects\": [\n        {\n            \"location\": {\n                \"xmin\": 210.46630202556508,\n                \"ymin\": 63.020422193569026,\n                \"xmax\": 313.14453510948647,\n                \"ymax\": 303.89819668096635\n            },\n            \"rule_id\": \"1562034599497\"\n        }\n    ],\n    \"img_base64\": \"\",\n\t  \"type\":'attitude'\n  } \n\n    console.log(res, 'uploadSuccess');\n  }\n  \n  private uploadError(res: any){\n    this.uploadLoding = false;\n    console.log(res, 'uploadError')\n  }\n  \n  private selectChange(value: string) {\n    if(value === 'intrusion') {\n      this.svgOptions = { type: 'polygon', name: value, color: 'red' };\n    } else {\n      this.svgOptions = {};\n    }\n    console.log(this.svgOptions);\n    console.log(value);\n  }\n}\n</script>\n<style lang=\"csss\">\n  .pic{\n    \n  }\n</style>\n\n\n<style lang=\"scss\" scoped>\n.pic{\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  background: white;\n}\nh4{\n  text-align: right;\n}\n\n</style>\n\n"]}]}