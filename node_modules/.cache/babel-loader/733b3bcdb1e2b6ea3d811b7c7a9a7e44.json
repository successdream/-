{"remainingRequest":"D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\thread-loader\\dist\\cjs.js!D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\babel-loader\\lib\\index.js!D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\egp-web-components\\src\\components\\svg\\EgpSvg.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\egp-web-components\\src\\components\\svg\\EgpSvg.vue","mtime":499162500000},{"path":"D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n//\n//\n//\n//\n//\n//\n//\nimport SVG from 'svg.js';\nimport 'svg.select.js';\nimport 'svg.resize.js';\nimport 'svg.draggable.js';\nimport Handler from \"./handler\";\nexport default {\n  data: function data() {\n    return {\n      draw: SVG()\n    };\n  },\n  props: {\n    imgSrc: {\n      type: String,\n      default: ''\n    },\n    options: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  watch: {\n    options: function options(newValue, oldValue) {\n      if (this.$refs.svgContainer) Handler.register(this, this.$refs.svgContainer, this.draw, newValue);\n    }\n  },\n  mounted: function mounted() {\n    this.draw = SVG.adopt(this.$refs.svg);\n  },\n  methods: {\n    setData: function setData(data) {\n      var _this = this;\n\n      if (JSON.stringify(this.getData()) === JSON.stringify(data)) return;\n      this.draw.clear();\n      data = JSON.parse(JSON.stringify(data));\n      data.forEach(function (d) {\n        if (Handler[d.type]) Handler[d.type].drawObj(_this.draw, d);\n      });\n    },\n    getData: function getData() {\n      return this.draw.children().filter(function (e) {\n        return e.data('egp');\n      }).map(function (d) {\n        return d.data('egp');\n      });\n    }\n  }\n};",{"version":3,"sources":["EgpSvg.vue"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAA,GAAA,MAAA,QAAA;AACA,OAAA,eAAA;AACA,OAAA,eAAA;AACA,OAAA,kBAAA;AACA,OAAA,OAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,GAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KADA;AAEA,IAAA,OAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA,oBAAA;AAAA,eAAA,EAAA;AAAA;AAAA;AAFA,GANA;AAUA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA,iBAAA,QAAA,EAAA,QAAA,EAAA;AACA,UAAA,KAAA,KAAA,CAAA,YAAA,EACA,OAAA,CAAA,QAAA,CAAA,IAAA,EAAA,KAAA,KAAA,CAAA,YAAA,EAAA,KAAA,IAAA,EAAA,QAAA;AACA;AAJA,GAVA;AAgBA,EAAA,OAhBA,qBAgBA;AACA,SAAA,IAAA,GAAA,GAAA,CAAA,KAAA,CAAA,KAAA,KAAA,CAAA,GAAA,CAAA;AACA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,IADA,EACA;AAAA;;AACA,UAAA,IAAA,CAAA,SAAA,CAAA,KAAA,OAAA,EAAA,MAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,EAAA;AACA,WAAA,IAAA,CAAA,KAAA;AACA,MAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CAAA;AACA,MAAA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,OAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,IAAA,EAAA,CAAA;AACA,OAFA;AAGA,KARA;AAUA,IAAA,OAVA,qBAUA;AACA,aAAA,KAAA,IAAA,CAAA,QAAA,GAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AAAA,OAAA,EAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AAAA,OAAA,CAAA;AACA;AAZA;AAnBA,CAAA","sourcesContent":["<template>\r\n  <div ref=\"svgContainer\" class=\"full-fill\" style=\"display:flex;position:relative;\" onselectstart=\"return false\">\r\n    <img ref=\"img\" class=\"full-fill\" width=\"100%\" height=\"100%\" :src=\"imgSrc\" style=\"background:#eee\">\r\n    <svg ref=\"svg\" width=\"100%\" height=\"100%\" class=\"full-fill\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SVG from 'svg.js';\r\nimport 'svg.select.js';\r\nimport 'svg.resize.js';\r\nimport 'svg.draggable.js';\r\nimport Handler from './handler';\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      draw: SVG(),\r\n    };\r\n  },\r\n  props: {\r\n    imgSrc: { type: String, default: '' },\r\n    options: { type: Object, default: function () { return {} } }\r\n  },\r\n  watch: {\r\n    options: function (newValue, oldValue) {\r\n      if (this.$refs.svgContainer)\r\n        Handler.register(this, this.$refs.svgContainer, this.draw, newValue);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.draw = SVG.adopt(this.$refs.svg);\r\n  },\r\n  methods: {\r\n    setData(data) {\r\n      if (JSON.stringify(this.getData()) === JSON.stringify(data)) return;\r\n      this.draw.clear();\r\n      data = JSON.parse(JSON.stringify(data));\r\n      data.forEach(d => {\r\n        if (Handler[d.type]) Handler[d.type].drawObj(this.draw, d);\r\n      });\r\n    },\r\n\r\n    getData() {\r\n      return this.draw.children().filter(e => e.data('egp')).map(d => d.data('egp'));\r\n    },\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.full-fill {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n"],"sourceRoot":"node_modules/egp-web-components/src/components/svg"}]}