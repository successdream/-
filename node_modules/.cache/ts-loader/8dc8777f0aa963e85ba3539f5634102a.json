{"remainingRequest":"D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\babel-loader\\lib\\index.js!D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\ts-loader\\index.js??ref--13-2!D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workSpace\\new-modules\\picture-detection\\src\\views\\pictureDetection\\Main.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\work\\workSpace\\new-modules\\picture-detection\\src\\views\\pictureDetection\\Main.vue","mtime":1563759171849},{"path":"D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.map\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\work\\\\workSpace\\\\new-modules\\\\picture-detection\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\work\\\\workSpace\\\\new-modules\\\\picture-detection\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\work\\\\workSpace\\\\new-modules\\\\picture-detection\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\work\\\\workSpace\\\\new-modules\\\\picture-detection\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\work\\\\workSpace\\\\new-modules\\\\picture-detection\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\work\\\\workSpace\\\\new-modules\\\\picture-detection\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/inherits\";\nimport * as tslib_1 from \"tslib\";\nimport { Component, Vue } from 'vue-property-decorator';\nimport { EgpSvg } from 'egp-web-components';\nimport recordDetail from \"./RecordDetail.vue\"; // http://192.168.3.109:7001/postImg\n\nvar IntrusionDetection =\n/*#__PURE__*/\nfunction (_Vue) {\n  _inherits(IntrusionDetection, _Vue);\n\n  // http://192.168.3.109:7001/postImg\n  function IntrusionDetection() {\n    var _this;\n\n    _classCallCheck(this, IntrusionDetection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IntrusionDetection).apply(this, arguments));\n    _this.svgOptions = {};\n    _this.fileList = [];\n    _this.files = [];\n    _this.imgSrc = '';\n    _this.uploadLoding = false;\n    _this.detectionResult = {};\n    _this.resultImg = '';\n    _this.secondSelect = false;\n    _this.uploadBtn = 'success';\n    _this.intrusionStyle = true;\n    _this.uploadData = {\n      confidence: 0.8,\n      nms: 0.4,\n      type: 'attitude',\n      region: ''\n    };\n    return _this;\n  }\n\n  _createClass(IntrusionDetection, [{\n    key: \"mounted\",\n    value: function mounted() {\n      if (this.uploadData && this.uploadData.hasOwnProperty('confidence')) delete this.uploadData.confidence;\n      if (this.uploadData && this.uploadData.hasOwnProperty('nms')) delete this.uploadData.nms;\n      if (this.uploadData && this.uploadData.hasOwnProperty('region')) delete this.uploadData.region;\n    }\n  }, {\n    key: \"submitUpload\",\n    value: function () {\n      var _submitUpload = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var fs, rules, uploadFiles;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                fs = this.$refs.upload;\n\n                if (fs) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                rules = [];\n                uploadFiles = fs.uploadFiles;\n\n                if (!(uploadFiles.length === 0)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                this.$message({\n                  message: '请选择文件后上传',\n                  type: 'warning'\n                });\n                return _context.abrupt(\"return\");\n\n              case 8:\n                if (this.$refs.egpSvg) rules = this.$refs.egpSvg.getData();\n\n                if (!(!rules.length && this.uploadData.type === 'intrusion')) {\n                  _context.next = 12;\n                  break;\n                }\n\n                this.$message({\n                  message: '请您绘画规则后上传',\n                  type: 'warning'\n                });\n                return _context.abrupt(\"return\");\n\n              case 12:\n                if (!this.uploadLoding) {\n                  _context.next = 15;\n                  break;\n                }\n\n                this.$message({\n                  message: '图片上传还未完成，请您稍等',\n                  type: 'warning'\n                });\n                return _context.abrupt(\"return\");\n\n              case 15:\n                if (!this.secondSelect) {\n                  _context.next = 18;\n                  break;\n                }\n\n                this.$message({\n                  message: '图片已经上传，请重新选择图片后上传',\n                  type: 'warning'\n                });\n                return _context.abrupt(\"return\");\n\n              case 18:\n                this.uploadLoding = true;\n                this.secondSelect = true;\n                fs.uploadFiles = fs.uploadFiles || [];\n                fs.uploadFiles = [fs.uploadFiles[fs.uploadFiles.length - 1]];\n                if (this.uploadData.type === 'intrusion') this.uploadData.region = JSON.stringify(this.originToCommon(rules));\n                this.$refs.upload.submit();\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submitUpload() {\n        return _submitUpload.apply(this, arguments);\n      }\n\n      return submitUpload;\n    }()\n  }, {\n    key: \"originToCommon\",\n    value: function originToCommon(rules) {\n      return rules.map(function (item) {\n        return {\n          location: item.data,\n          rule_id: item.id\n        };\n      });\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this.fileList = [];\n      this.imgSrc = '';\n      if (this.$refs.egpSvg) this.$refs.egpSvg.setData([]);\n    }\n  }, {\n    key: \"uploadChange\",\n    value: function uploadChange(file, fileList) {\n      var imgSrc = window.URL.createObjectURL(file.raw);\n      this.imgSrc = imgSrc;\n    }\n  }, {\n    key: \"uploadSuccess\",\n    value: function uploadSuccess(res, file, fileList) {\n      this.uploadLoding = false;\n      this.detectionResult = res;\n\n      if (res.algType && res.algType !== 1) {\n        console.log(res, '分析结果');\n        this.$message({\n          message: \"分析错误\",\n          type: 'error'\n        });\n        return;\n      }\n\n      this.resultImg = res.img_base64 ? \"data:image/png;base64, \".concat(res.img_base64) : ''; //强制刷新\n      // this.files = [];\n    }\n  }, {\n    key: \"uploadError\",\n    value: function uploadError(res, file, fileList) {\n      this.uploadLoding = false;\n      console.log(res, 'uploadError');\n    } //清空数据\n\n  }, {\n    key: \"clearData\",\n    value: function clearData() {\n      if (this.$refs.egpSvg) this.$refs.egpSvg.setData([]);\n    } //展示结果\n\n  }, {\n    key: \"showResult\",\n    value: function showResult() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.$refs.recordDetail.show(_this2.detectionResult);\n      });\n    }\n  }, {\n    key: \"nativeUploadChange\",\n    value: function nativeUploadChange(e) {\n      this.secondSelect = false;\n      this.$refs.egpSvg.setData([]);\n    }\n  }, {\n    key: \"selectChange\",\n    value: function selectChange(value) {\n      var _this3 = this;\n\n      if (value === 'intrusion') {\n        this.intrusionStyle = false;\n        this.$nextTick(function () {\n          _this3.svgOptions = {\n            type: 'polygon',\n            name: value,\n            color: 'red'\n          };\n          _this3.uploadData = {\n            confidence: 0.8,\n            nms: 0.4,\n            type: 'intrusion',\n            region: ''\n          };\n        });\n        console.log(this.uploadData, 'uploadData', this.svgOptions);\n      } else {\n        if (this.$refs.egpSvg) this.$refs.egpSvg.setData([]);\n        this.svgOptions = {};\n        this.intrusionStyle = true;\n\n        if (this.uploadData && this.uploadData.hasOwnProperty('confidence')) {\n          delete this.uploadData.confidence;\n        }\n\n        if (this.uploadData && this.uploadData.hasOwnProperty('nms')) {\n          delete this.uploadData.nms;\n        }\n\n        if (this.uploadData && this.uploadData.hasOwnProperty('region')) {\n          delete this.uploadData.region;\n        }\n      }\n    }\n  }]);\n\n  return IntrusionDetection;\n}(Vue);\n\nIntrusionDetection = tslib_1.__decorate([Component({\n  components: {\n    EgpSvg: EgpSvg,\n    recordDetail: recordDetail\n  }\n})], IntrusionDetection);\nexport default IntrusionDetection;",{"version":3,"sources":["D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work\\workSpace\\new-modules\\picture-detection\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workSpace\\new-modules\\picture-detection\\src\\views\\pictureDetection\\Main.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Watch } from 'vue-property-decorator';\nimport moment from 'moment';\nimport { EgpSvg } from 'egp-web-components';\nimport Card from '@/components/card/Main.vue';\nimport API from '@/api';\nimport { Params, Rule, originRule, Record } from '../../api/intrusion';\nimport { ElUpload } from 'element-ui/types/upload';\nimport axios from 'axios';\nimport uuid from 'uuid/v4';\nimport recordDetail from './RecordDetail.vue'\n\ninterface Point {\n  x: number;\n  y:number;\n}\n\n\n// http://192.168.3.109:7001/postImg\n@Component({\n  components: {\n    EgpSvg,\n    recordDetail,\n  }\n})\nexport default class IntrusionDetection extends Vue {\n  $refs!: {\n    upload: ElUpload;\n    egpSvg: any;\n    recordDetail:recordDetail;\n  }\n  private svgOptions: any = {};\n  private fileList: any[] = [];\n  private files: any[] = [];\n  private imgSrc = '';\n  private uploadLoding = false;\n  private detectionResult: any = {} \n  private resultImg = ''\n  private secondSelect = false;\n  private uploadBtn = 'success';\n  private intrusionStyle = true;\n\n  private uploadData: {\n    confidence: number,\n    nms: number,\n    type: string,\n    region: string,\n  } = {\n    confidence: 0.8,\n    nms: 0.4,\n    type: 'attitude',\n    region: '',\n  };\n\n  mounted(){\n    if(this.uploadData && this.uploadData.hasOwnProperty('confidence'))  delete this.uploadData.confidence;\n    if(this.uploadData && this.uploadData.hasOwnProperty('nms'))  delete this.uploadData.nms;\n    if(this.uploadData && this.uploadData.hasOwnProperty('region'))  delete this.uploadData.region;\n  }\n  \n  private async submitUpload() {\n    const fs = this.$refs.upload;\n    if(!fs) return;\n    let rules: any[] = [];\n    const { uploadFiles } = fs as any;\n    if(uploadFiles.length === 0){\n       this.$message({\n        message: '请选择文件后上传',\n        type:'warning'\n      })\n      return;\n    }\n    if(this.$refs.egpSvg) rules = this.$refs.egpSvg.getData();\n    if(!rules.length && this.uploadData.type === 'intrusion'){\n      this.$message({\n        message: '请您绘画规则后上传',\n        type:'warning'\n      })\n      return;\n    }\n\n    if(this.uploadLoding){\n       this.$message({\n        message: '图片上传还未完成，请您稍等',\n        type:'warning'\n      })\n      return;\n    }\n    if(this.secondSelect){\n       this.$message({\n        message: '图片已经上传，请重新选择图片后上传',\n        type:'warning'\n      })\n      return;\n    }\n    this.uploadLoding = true;\n    this.secondSelect = true;\n    (fs as any).uploadFiles = (fs as any).uploadFiles || [];\n    (fs as any).uploadFiles = [(fs as any).uploadFiles[(fs as any).uploadFiles.length - 1]];\n    if(this.uploadData.type === 'intrusion') this.uploadData.region = JSON.stringify(this.originToCommon(rules));\n    this.$refs.upload.submit();\n  }\n  \n  private originToCommon(rules: originRule[]): Rule[] {\n    return rules.map(item => ({ location: item.data, rule_id: item.id }));\n  }\n\n  private clearAll() {\n    this.fileList = [];\n    this.imgSrc = '';\n    if(this.$refs.egpSvg)\n      this.$refs.egpSvg.setData([]);\n  }\n  \n  private uploadChange(file: any, fileList: any) {\n    const imgSrc = window.URL.createObjectURL(file.raw);\n    this.imgSrc = imgSrc;\n  }\n  \n  private uploadSuccess(res: any, file: any, fileList: any) {\n    this.uploadLoding = false;\n    this.detectionResult = res;\n    if(res.algType && res.algType !== 1){\n      console.log(res, '分析结果');\n      this.$message({message:\"分析错误\",\n        type: 'error'\n      })\n      return;\n    }\n    this.resultImg = res.img_base64? `data:image/png;base64, ${res.img_base64}` : '';\n    //强制刷新\n    // this.files = [];\n  }\n  \n  private uploadError(res: any, file: any, fileList: any){\n    this.uploadLoding = false;\n    console.log(res, 'uploadError');\n  }\n  \n  //清空数据\n  private clearData(){\n    if(this.$refs.egpSvg) this.$refs.egpSvg.setData([]);\n  }\n //展示结果\n  private showResult(){\n    this.$nextTick(() => {\n      this.$refs.recordDetail.show(this.detectionResult);\n    })\n  }\n\n  private nativeUploadChange(e: any){\n    this.secondSelect = false;\n    this.$refs.egpSvg.setData([]);\n  }\n  \n\n  private selectChange(value: string) {\n    if(value === 'intrusion') {\n      this.intrusionStyle = false;\n      this.$nextTick(() => {\n        this.svgOptions = { type: 'polygon', name: value, color: 'red' };\n        this.uploadData = { confidence: 0.8, nms: 0.4, type: 'intrusion',region: '',};\n      })\n      console.log(this.uploadData, 'uploadData', this.svgOptions )\n    } else {\n      if(this.$refs.egpSvg) this.$refs.egpSvg.setData([]);\n      this.svgOptions = {};\n      this.intrusionStyle = true;\n      if(this.uploadData && this.uploadData.hasOwnProperty('confidence')) {\n        delete this.uploadData.confidence;\n      }\n      if(this.uploadData && this.uploadData.hasOwnProperty('nms')) {\n        delete this.uploadData.nms;\n      }\n      if(this.uploadData && this.uploadData.hasOwnProperty('region')) {\n        delete this.uploadData.region;\n      }\n    }\n  }\n\n}\n"],"sourceRoot":""}]}