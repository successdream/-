{"remainingRequest":"D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\thread-loader\\dist\\cjs.js!D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\babel-loader\\lib\\index.js!D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\ts-loader\\index.js??ref--13-3!D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workSpace\\upload\\picture-detection-window\\src\\views\\pictureDetection\\Main.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\work\\workSpace\\upload\\picture-detection-window\\src\\views\\pictureDetection\\Main.vue","mtime":1563865143201},{"path":"D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\work\\\\workSpace\\\\upload\\\\picture-detection-window\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\work\\\\workSpace\\\\upload\\\\picture-detection-window\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\work\\\\workSpace\\\\upload\\\\picture-detection-window\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\work\\\\workSpace\\\\upload\\\\picture-detection-window\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\work\\\\workSpace\\\\upload\\\\picture-detection-window\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\work\\\\workSpace\\\\upload\\\\picture-detection-window\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/inherits\";\nimport * as tslib_1 from \"tslib\";\nimport { Component, Vue } from 'vue-property-decorator';\nimport { EgpSvg } from 'egp-web-components';\nimport recordDetail from \"./RecordDetail.vue\"; // http://192.168.3.109:7001/postImg\n\nvar IntrusionDetection =\n/*#__PURE__*/\nfunction (_Vue) {\n  _inherits(IntrusionDetection, _Vue);\n\n  // http://192.168.3.109:7001/postImg\n  function IntrusionDetection() {\n    var _this;\n\n    _classCallCheck(this, IntrusionDetection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IntrusionDetection).apply(this, arguments));\n    _this.svgOptions = {};\n    _this.fileList = [];\n    _this.files = [];\n    _this.imgSrc = '';\n    _this.uploadLoding = false;\n    _this.detectionResult = {};\n    _this.resultImg = '';\n    _this.secondSelect = false;\n    _this.uploadBtn = 'success';\n    _this.intrusionStyle = true;\n    _this.resultList = [];\n    _this.loading = false;\n    _this.uploadData = {\n      confidence: 0.8,\n      nms: 0.4,\n      type: 'attitude',\n      region: ''\n    };\n    return _this;\n  }\n\n  _createClass(IntrusionDetection, [{\n    key: \"mounted\",\n    value: function mounted() {\n      if (this.uploadData && this.uploadData.hasOwnProperty('confidence')) delete this.uploadData.confidence;\n      if (this.uploadData && this.uploadData.hasOwnProperty('nms')) delete this.uploadData.nms;\n      if (this.uploadData && this.uploadData.hasOwnProperty('region')) delete this.uploadData.region;\n    }\n  }, {\n    key: \"submitUpload\",\n    value: function () {\n      var _submitUpload = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var uploadFiles, flie, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                uploadFiles = this.$refs.upload.uploadFiles;\n\n                if (uploadFiles.length) {\n                  _context.next = 4;\n                  break;\n                }\n\n                this.$message({\n                  message: '请选择文件后上传',\n                  type: 'warning'\n                });\n                return _context.abrupt(\"return\");\n\n              case 4:\n                flie = [this.$refs.upload.uploadFiles.pop()];\n                data = window.EcvAlarmData.data.find(function (item) {\n                  return item.filename === flie[0].name;\n                });\n\n                if (data) {\n                  _context.next = 10;\n                  break;\n                }\n\n                console.log('文件上传出错');\n                this.$message({\n                  type: 'error',\n                  message: '文件上传出错'\n                });\n                return _context.abrupt(\"return\");\n\n              case 10:\n                this.loading = true;\n                setTimeout(function () {\n                  _this2.resultList = [data];\n                  _this2.loading = false;\n                }, 3000);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submitUpload() {\n        return _submitUpload.apply(this, arguments);\n      }\n\n      return submitUpload;\n    }()\n  }, {\n    key: \"originToCommon\",\n    value: function originToCommon(rules) {\n      return rules.map(function (item) {\n        return {\n          location: item.data,\n          rule_id: item.id\n        };\n      });\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this.fileList = [];\n      this.imgSrc = '';\n      if (this.$refs.egpSvg) this.$refs.egpSvg.setData([]);\n      this.resultList = [];\n    }\n  }, {\n    key: \"uploadChange\",\n    value: function uploadChange(file, fileList) {// const imgSrc = window.URL.createObjectURL(file.raw);\n      // this.imgSrc = imgSrc;\n    }\n  }, {\n    key: \"uploadSuccess\",\n    value: function uploadSuccess(res, file, fileList) {// this.uploadLoding = false;\n      // this.detectionResult = res;\n      // if(res.algType && res.algType !== 1){\n      //   console.log(res, '分析结果');\n      //   this.$message({message:\"分析错误\",\n      //     type: 'error'\n      //   })\n      //   return;\n      // }\n      // this.resultImg = res.img_base64? `data:image/png;base64, ${res.img_base64}` : '';\n      //强制刷新\n      // this.files = [];\n    }\n  }, {\n    key: \"uploadError\",\n    value: function uploadError(res, file, fileList) {} // this.uploadLoding = false;\n    // console.log(res, 'uploadError');\n    //清空数据\n\n  }, {\n    key: \"clearData\",\n    value: function clearData() {} // if(this.$refs.egpSvg) this.$refs.egpSvg.setData([]);\n    //展示结果\n\n  }, {\n    key: \"showResult\",\n    value: function showResult() {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        _this3.$refs.recordDetail.show(_this3.resultList);\n      });\n    }\n  }, {\n    key: \"nativeUploadChange\",\n    value: function nativeUploadChange(e) {// this.secondSelect = false;\n      // this.$refs.egpSvg.setData([]);\n    }\n  }, {\n    key: \"selectChange\",\n    value: function selectChange(value) {\n      var _this4 = this;\n\n      if (value === 'intrusion') {\n        this.intrusionStyle = false;\n        this.$nextTick(function () {\n          _this4.svgOptions = {\n            type: 'polygon',\n            name: value,\n            color: 'red'\n          };\n          _this4.uploadData = {\n            confidence: 0.8,\n            nms: 0.4,\n            type: 'intrusion',\n            region: ''\n          };\n        });\n        console.log(this.uploadData, 'uploadData', this.svgOptions);\n      } else {\n        if (this.$refs.egpSvg) this.$refs.egpSvg.setData([]);\n        this.svgOptions = {};\n        this.intrusionStyle = true;\n\n        if (this.uploadData && this.uploadData.hasOwnProperty('confidence')) {\n          delete this.uploadData.confidence;\n        }\n\n        if (this.uploadData && this.uploadData.hasOwnProperty('nms')) {\n          delete this.uploadData.nms;\n        }\n\n        if (this.uploadData && this.uploadData.hasOwnProperty('region')) {\n          delete this.uploadData.region;\n        }\n      }\n    }\n  }, {\n    key: \"clerarAll\",\n    value: function clerarAll() {\n      this.$refs.upload.uploadFiles = [];\n    }\n  }]);\n\n  return IntrusionDetection;\n}(Vue);\n\nIntrusionDetection = tslib_1.__decorate([Component({\n  components: {\n    EgpSvg: EgpSvg,\n    recordDetail: recordDetail\n  }\n})], IntrusionDetection);\nexport default IntrusionDetection;",{"version":3,"sources":["D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work\\workSpace\\upload\\picture-detection-window\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workSpace\\upload\\picture-detection-window\\src\\views\\pictureDetection\\Main.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Watch } from 'vue-property-decorator';\nimport moment from 'moment';\nimport { EgpSvg } from 'egp-web-components';\nimport Card from '@/components/card/Main.vue';\nimport API from '@/api';\nimport { Params, Rule, originRule, Record } from '../../api/intrusion';\nimport { ElUpload } from 'element-ui/types/upload';\nimport axios from 'axios';\nimport uuid from 'uuid/v4';\nimport recordDetail from './RecordDetail.vue'\n\ninterface Point {\n  x: number;\n  y:number;\n}\n\n\n// http://192.168.3.109:7001/postImg\n@Component({\n  components: {\n    EgpSvg,\n    recordDetail,\n  }\n})\nexport default class IntrusionDetection extends Vue {\n  $refs!: {\n    upload: ElUpload;\n    egpSvg: any;\n    recordDetail:recordDetail;\n  }\n  private svgOptions: any = {};\n  private fileList: any[] = [];\n  private files: any[] = [];\n  private imgSrc = '';\n  private uploadLoding = false;\n  private detectionResult: any = {} \n  private resultImg = ''\n  private secondSelect = false;\n  private uploadBtn = 'success';\n  private intrusionStyle = true;\n  private resultList: any[] = [];\n  private loading = false;\n\n  private uploadData: {\n    confidence: number,\n    nms: number,\n    type: string,\n    region: string,\n  } = {\n    confidence: 0.8,\n    nms: 0.4,\n    type: 'attitude',\n    region: '',\n  };\n\n  mounted(){\n    if(this.uploadData && this.uploadData.hasOwnProperty('confidence'))  delete this.uploadData.confidence;\n    if(this.uploadData && this.uploadData.hasOwnProperty('nms'))  delete this.uploadData.nms;\n    if(this.uploadData && this.uploadData.hasOwnProperty('region'))  delete this.uploadData.region;\n  }\n  \n  private async submitUpload() {  \n    const {uploadFiles} = (this.$refs.upload as any);\n    if(!uploadFiles.length) {\n      this.$message({\n          message: '请选择文件后上传',\n          type: 'warning'\n      });\n      return;\n    }\n    const flie = [(this.$refs.upload as any).uploadFiles.pop()];\n    const data = (window as any).EcvAlarmData.data.find((item: any) =>{\n       return item.filename === flie[0].name\n    });\n    if(!data){\n      console.log('文件上传出错');\n      this.$message({\n        type:'error',\n        message:'文件上传出错'\n      })\n      return;\n    }\n\n    this.loading = true;\n     setTimeout(() => {\n      this.resultList = [data];\n      this.loading = false;\n    },3000)\n  }\n  \n  private originToCommon(rules: originRule[]): Rule[] {\n    return rules.map(item => ({ location: item.data, rule_id: item.id }));\n  }\n\n  private clearAll() {\n    this.fileList = [];\n    this.imgSrc = '';\n    if(this.$refs.egpSvg) this.$refs.egpSvg.setData([]);\n    this.resultList = [];\n  }\n  \n  private uploadChange(file: any, fileList: any) {\n    // const imgSrc = window.URL.createObjectURL(file.raw);\n    // this.imgSrc = imgSrc;\n  }\n  \n  private uploadSuccess(res: any, file: any, fileList: any) {\n    // this.uploadLoding = false;\n    // this.detectionResult = res;\n    // if(res.algType && res.algType !== 1){\n    //   console.log(res, '分析结果');\n    //   this.$message({message:\"分析错误\",\n    //     type: 'error'\n    //   })\n    //   return;\n    // }\n    // this.resultImg = res.img_base64? `data:image/png;base64, ${res.img_base64}` : '';\n    //强制刷新\n    // this.files = [];\n  }\n  \n  private uploadError(res: any, file: any, fileList: any){\n    // this.uploadLoding = false;\n    // console.log(res, 'uploadError');\n  }\n  \n  //清空数据\n  private clearData(){\n    // if(this.$refs.egpSvg) this.$refs.egpSvg.setData([]);\n  }\n //展示结果\n  private showResult(){\n    this.$nextTick(() => {\n      this.$refs.recordDetail.show(this.resultList);\n    })\n  }\n\n  private nativeUploadChange(e: any){\n    // this.secondSelect = false;\n    // this.$refs.egpSvg.setData([]);\n  }\n  \n\n  private selectChange(value: string) {\n    if(value === 'intrusion') {\n      this.intrusionStyle = false;\n      this.$nextTick(() => {\n        this.svgOptions = { type: 'polygon', name: value, color: 'red' };\n        this.uploadData = { confidence: 0.8, nms: 0.4, type: 'intrusion',region: '',};\n      })\n      console.log(this.uploadData, 'uploadData', this.svgOptions )\n    } else {\n      if(this.$refs.egpSvg) this.$refs.egpSvg.setData([]);\n      this.svgOptions = {};\n      this.intrusionStyle = true;\n      if(this.uploadData && this.uploadData.hasOwnProperty('confidence')) {\n        delete this.uploadData.confidence;\n      }\n      if(this.uploadData && this.uploadData.hasOwnProperty('nms')) {\n        delete this.uploadData.nms;\n      }\n      if(this.uploadData && this.uploadData.hasOwnProperty('region')) {\n        delete this.uploadData.region;\n      }\n    }\n  }\n\n  private clerarAll(){\n    (this.$refs.upload as any).uploadFiles = []\n  }\n\n}\n"],"sourceRoot":""}]}