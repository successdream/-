{"remainingRequest":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\babel-loader\\lib\\index.js!D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\ts-loader\\index.js??ref--13-2!D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\src\\views\\pictureDetection\\Main.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\src\\views\\pictureDetection\\Main.vue","mtime":1563356514709},{"path":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.map\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\work\\\\workSpace\\\\upload\\\\new-modules\\\\picture-detection\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\work\\\\workSpace\\\\upload\\\\new-modules\\\\picture-detection\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\work\\\\workSpace\\\\upload\\\\new-modules\\\\picture-detection\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\work\\\\workSpace\\\\upload\\\\new-modules\\\\picture-detection\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\work\\\\workSpace\\\\upload\\\\new-modules\\\\picture-detection\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\work\\\\workSpace\\\\upload\\\\new-modules\\\\picture-detection\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/inherits\";\nimport * as tslib_1 from \"tslib\";\nimport { Component, Vue } from 'vue-property-decorator';\nimport { EgpSvg } from 'egp-web-components'; // http://192.168.3.109:7001/postImg\n\nvar IntrusionDetection =\n/*#__PURE__*/\nfunction (_Vue) {\n  _inherits(IntrusionDetection, _Vue);\n\n  // http://192.168.3.109:7001/postImg\n  function IntrusionDetection() {\n    var _this;\n\n    _classCallCheck(this, IntrusionDetection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IntrusionDetection).apply(this, arguments));\n    _this.svgOptions = {};\n    _this.fileList = [];\n    _this.files = [];\n    _this.imgSrc = '';\n    _this.uploadLoding = false;\n    _this.detectionResult = {};\n    _this.uploadData = {\n      confidence: 0.8,\n      nms: 0.4,\n      type: 'attitude',\n      region: ''\n    };\n    return _this;\n  }\n\n  _createClass(IntrusionDetection, [{\n    key: \"submitUpload\",\n    value: function () {\n      var _submitUpload = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var rules;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.files.length === 0 || this.uploadLoding)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                console.log('files为空数组或者上一次文件还未上传成功');\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this.uploadLoding = true;\n                rules = this.$refs.egpSvg.getData();\n                this.uploadData.region = JSON.stringify(this.originToCommon(rules));\n                this.$refs.upload.submit();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submitUpload() {\n        return _submitUpload.apply(this, arguments);\n      }\n\n      return submitUpload;\n    }()\n  }, {\n    key: \"originToCommon\",\n    value: function originToCommon(rules) {\n      return rules.map(function (item) {\n        return {\n          location: item.data,\n          rule_id: item.id\n        };\n      });\n    }\n  }, {\n    key: \"uploadChange\",\n    value: function uploadChange(file) {\n      var imgSrc = window.URL.createObjectURL(file.raw);\n      this.imgSrc = imgSrc;\n      this.files = [file];\n    }\n  }, {\n    key: \"uploadSuccess\",\n    value: function uploadSuccess(res) {\n      console.log(res, 'uploadSuccess');\n      this.uploadLoding = false;\n      this.detectionResult = res; // this.imgSrc = `data:image/png;base64, ${window.URL.createObjectURL(res.img_base64)} || ''`;\n\n      this.imgSrc = \"data:image/png;base64, \".concat(res.img_base64, \" || ''\");\n      this.files = [];\n    }\n  }, {\n    key: \"uploadError\",\n    value: function uploadError(res) {\n      this.uploadLoding = false;\n      this.files = [];\n      console.log(res, 'uploadError');\n    }\n  }, {\n    key: \"selectChange\",\n    value: function selectChange(value) {\n      if (value === 'intrusion') {\n        this.svgOptions = {\n          type: 'polygon',\n          name: value,\n          color: 'red'\n        };\n      } else {\n        this.svgOptions = {};\n      }\n\n      console.log(this.svgOptions);\n      console.log(value);\n    }\n  }]);\n\n  return IntrusionDetection;\n}(Vue);\n\nIntrusionDetection = tslib_1.__decorate([Component({\n  components: {\n    EgpSvg: EgpSvg\n  }\n})], IntrusionDetection);\nexport default IntrusionDetection;",{"version":3,"sources":["D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workSpace\\upload\\new-modules\\picture-detection\\src\\views\\pictureDetection\\Main.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Watch } from 'vue-property-decorator';\nimport moment from 'moment';\nimport { EgpSvg } from 'egp-web-components';\nimport Card from '@/components/card/Main.vue';\nimport API from '@/api';\nimport { Params, Rule, originRule, Record } from '../../api/intrusion';\nimport { ElUpload } from 'element-ui/types/upload';\nimport axios from 'axios';\nimport uuid from 'uuid/v4';\n\ninterface Point {\n  x: number;\n  y:number;\n}\n\n\n// http://192.168.3.109:7001/postImg\n@Component({\n  components: {\n    EgpSvg,\n  }\n})\nexport default class IntrusionDetection extends Vue {\n  $refs!: {\n    upload: ElUpload;\n    egpSvg: any;\n  }\n  private svgOptions: any = {};\n  private fileList: any[] = [];\n  private files: any[] = [];\n  private imgSrc = '';\n  private uploadLoding = false;\n  private detectionResult: any = {} \n\n  private uploadData: {\n    confidence: number,\n    nms: number,\n    type: string,\n    region: string,\n    // imgId: string,\n  } = {\n    confidence: 0.8,\n    nms: 0.4,\n    type: 'attitude',\n    region: '',\n    // imgId: '',\n  };\n  \n  private async submitUpload() {\n    // this.uploadData.imgId = uuid();\n    if(this.files.length === 0 || this.uploadLoding){\n       console.log('files为空数组或者上一次文件还未上传成功');\n       return;\n    }\n    this.uploadLoding = true;\n    const rules = this.$refs.egpSvg.getData();\n    this.uploadData.region = JSON.stringify(this.originToCommon(rules));\n    this.$refs.upload.submit();\n  }\n  \n  private originToCommon(rules: originRule[]): Rule[] {\n    return rules.map(item => ({ location: item.data, rule_id: item.id }));\n  }\n  \n  private uploadChange(file: any) {\n    const imgSrc = window.URL.createObjectURL(file.raw);\n    this.imgSrc = imgSrc;\n    this.files = [file];\n  }\n  \n  private uploadSuccess(res: any) {\n    console.log(res, 'uploadSuccess');\n    this.uploadLoding = false;\n    this.detectionResult = res;\n    // this.imgSrc = `data:image/png;base64, ${window.URL.createObjectURL(res.img_base64)} || ''`;\n    this.imgSrc = `data:image/png;base64, ${res.img_base64} || ''`;\n\n    this.files = [];\n  }\n  \n  private uploadError(res: any){\n    this.uploadLoding = false;\n    this.files = [];\n    console.log(res, 'uploadError')\n  }\n  \n  private selectChange(value: string) {\n    if(value === 'intrusion') {\n      this.svgOptions = { type: 'polygon', name: value, color: 'red' };\n    } else {\n      this.svgOptions = {};\n    }\n    console.log(this.svgOptions);\n    console.log(value);\n  }\n}\n"],"sourceRoot":""}]}